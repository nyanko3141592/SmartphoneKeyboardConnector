name: Firmware Build and Release

on:
  push:
    branches: [ main ]
    paths:
      - 'firmware/**'
      - '.github/workflows/firmware-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'firmware/**'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: |
          ~/.platformio
          ~/.cache/pip
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Build firmware
      run: |
        cd firmware
        pio run

    - name: Generate UF2 file
      run: |
        cd firmware
        # PlatformIO builds the UF2 automatically for nRF52
        ls -la .pio/build/xiaoblesense_adafruit/
        cp .pio/build/xiaoblesense_adafruit/firmware.uf2 ./xiao-keyboard-firmware.uf2
        cp .pio/build/xiaoblesense_adafruit/firmware.hex ./xiao-keyboard-firmware.hex

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware-files
        path: |
          firmware/xiao-keyboard-firmware.uf2
          firmware/xiao-keyboard-firmware.hex

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: firmware-${{ github.run_number }}
        release_name: Firmware Build ${{ github.run_number }}
        body: |
          ## üéØ Firmware Release

          ### üì¶ Installation Methods

          #### Method 1: UF2 File (Easiest)
          1. Download `xiao-keyboard-firmware.uf2`
          2. Connect Xiao BLE to your computer
          3. Double-press reset button (green LED will blink)
          4. Drag and drop the UF2 file to the XIAO-SENSE drive

          #### Method 2: HEX File (Advanced)
          Use with nRF Connect or other flashing tools

          ### üìù Changes
          - Built from commit: ${{ github.sha }}
          - Build time: ${{ github.event.head_commit.timestamp }}

          ### ‚ö†Ô∏è Requirements
          - Seeed XIAO nRF52840
          - USB Type-C cable
        draft: false
        prerelease: false

    - name: Upload UF2 to Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: firmware/xiao-keyboard-firmware.uf2
        asset_name: xiao-keyboard-firmware.uf2
        asset_content_type: application/octet-stream

    - name: Upload HEX to Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: firmware/xiao-keyboard-firmware.hex
        asset_name: xiao-keyboard-firmware.hex
        asset_content_type: application/octet-stream